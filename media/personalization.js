var user,repos,status,gitddb=!1,config_file_path="/git-ddb-ankurparihar.json",default_config={"--theme-color":"#f3c669","--theme-color-rgb":[243,198,105]},config_file_sha="",default_flags={sign:"",getUser:!1,checkGDDBRepo:!1,createGDDBRepo:!1,getConfig:!1,createConfig:!1,updateConfig:!1,applyConfig:!1,resetConfig:!1},config_flags=JSON.parse(JSON.stringify(default_flags)),config_data=JSON.parse(JSON.stringify(default_config));function resetConfig(){deleteCookie("theme"),console.log("Reset configurations"),user=null,repos=null,status=null,gitddb=!1,config_file_sha="",config_data=JSON.parse(JSON.stringify(default_config)),config_flags=JSON.parse(JSON.stringify(default_flags)),applyConfig()}function setCookie(e,o,t){var n=new Date;n.setTime(n.getTime()+864e5*t);var i="expires="+n.toUTCString();document.cookie=e+"="+o+";"+i+";path=/"}function getCookie(e){var o,t,n=!1;return document.cookie.split(";").forEach(i=>{if(!n){var s=i.split("=");if(2==s.length&&([o,t]=[s[0].trim(),s[1].trim()],o==e))return n=!0,t}}),n?t:""}function deleteCookie(e){setCookie(e,"",-1)}function getUser(){console.log("Attempt: Get user info"),getCookie("access_token")?fetch("https://api.github.com/user",{headers:{Authorization:"token "+getCookie("access_token")}}).then(e=>e.json()).then(e=>{if(e.message)return console.log("Could not fetch user info"),void resetConfig();console.log("User info fetched"),(user=e).login&&"in"==config_flags.sign&&checkGDDBRepo()}):console.log("Unauthorized")}function getReposList(){user?fetch("https://api.github.com/user/repos?type=private",{headers:{Authorization:"token "+getCookie("access_token")}}).then(e=>e.json()).then(e=>{repos=e}):console.log("Unauthorized")}function checkGDDBRepo(){console.log("Attempt: Check GDDB repository existance"),user?fetch("https://api.github.com/repos/"+user.login+"/git-ddb",{headers:{Authorization:"token "+getCookie("access_token")}}).then(e=>e.json()).then(e=>{"Not Found"!=e.message?(console.log("git-ddb repository found"),gitddb=!0,"in"==config_flags.sign&&getConfig()):(console.log("Can't access git-ddb repository"),"in"==config_flags.sign&&createGDDBRepo())}):console.log("Unauthorized")}function createGDDBRepo(){console.log("Attempt: Create GDDB repository"),user?fetch("https://api.github.com/user/repos",{method:"POST",headers:{Authorization:"token "+getCookie("access_token")},body:JSON.stringify({name:"git-ddb",description:"Github Distrubuted Database Global Repository",private:!0,has_issues:!1,has_projects:!1,has_wiki:!1,auto_init:!0})}).then(e=>e.json()).then(e=>{console.log("Creating git-ddb repository"),e.errors?"name already exists on this account"==e.errors[0].message&&(gitddb=!0,"in"==config_flags.sign&&createConfig()):e.id&&(gitddb=!0,"in"==config_flags.sign&&createConfig())}):console.log("Unauthorized")}function getConfig(){console.log("Attempt: Get config file"),user?fetch("https://api.github.com/repos/"+user.login+"/git-ddb/contents"+config_file_path,{headers:{Authorization:"token "+getCookie("access_token")}}).then(e=>e.json()).then(e=>{"Not Found"==e.message?(console.log("Settings file not found"),config_file_sha="","in"==config_flags.sign&&createConfig()):(console.log("Found setting file"),config_data=JSON.parse(atob(e.content)),config_file_sha=e.sha,"in"==config_flags.sign&&applyConfig(),cookiefieConfig())}):console.log("Unauthorized")}function createConfig(){console.log("Attempt: Create config file"),user?fetch("https://api.github.com/repos/"+user.login+"/git-ddb/contents"+config_file_path,{method:"PUT",headers:{Authorization:"token "+getCookie("access_token")},body:JSON.stringify({message:"set by @ankurparihar",content:btoa(JSON.stringify(config_data))})}).then(e=>e.json()).then(e=>{console.log(e),e.message?console.log("File creationg failed"):(config_file_sha=e.content.sha,applyConfig()),cookiefieConfig()}):console.log("Unauthorized")}function updateConfig(){console.log("Attempt: Uploading config file"),user?config_file_sha?fetch("https://api.github.com/repos/"+user.login+"/git-ddb/contents"+config_file_path,{method:"PUT",headers:{Authorization:"token "+getCookie("access_token")},body:JSON.stringify({message:"set by @ankurparihar",content:btoa(JSON.stringify(config_data)),sha:config_file_sha})}).then(e=>e.json()).then(e=>{e.message?console.log("Something went wrong updating settings"):(console.log("Successfully updated settings"),applyConfig(),cookiefieConfig())}):console.log("Unknown config file"):console.log("Unauthorized")}function applyConfig(){var e=document.documentElement;config_data["--theme-color"]&&e.style.setProperty("--theme-color",config_data["--theme-color"]),config_data["--theme-color-rgb"]&&(e.style.setProperty("--theme-color-r",config_data["--theme-color-rgb"][0]),e.style.setProperty("--theme-color-g",config_data["--theme-color-rgb"][1]),e.style.setProperty("--theme-color-b",config_data["--theme-color-rgb"][2])),console.log("Configuration applied"),"in"==config_flags.sign&&config_flags.sign}function signInfo(){return console.log("Checking sign status"),getUser(),user?1:(console.log("Signed out!"),0)}function signOut(){console.log("Signing Out"),deleteCookie("access_token"),resetConfig()}function signIn(){console.log("Signing In"),config_flags={sign:"in",getUser:!0,checkGDDBRepo:!0,createGDDBRepo:!1,getConfig:!0,createConfig:!1,updateConfig:!1,applyConfig:!0,resetConfig:!1},getUser()}function cookiefieConfig(){config_data["--theme-color-rgb"]&&setCookie("theme",JSON.stringify({"--theme-color-rgb":config_data["--theme-color-rgb"],"--theme-color":config_data["--theme-color"]}),30)}function decookiefieConfig(){var e=getCookie("theme");""!=e&&(console.log("Applying previously saved theme"),e=JSON.parse(e),config_data["--theme-color-rgb"]=e["--theme-color-rgb"],config_data["--theme-color"]=e["--theme-color"]),applyConfig()}getCookie("access_token")?(decookiefieConfig(),console.log("Access token found"),signIn()):console.log("No access token found");